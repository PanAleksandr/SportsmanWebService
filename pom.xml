<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>

    <artifactId>SportsmanWebService</artifactId>

    <version>1.0-SNAPSHOT</version>

    <!-- Parent projektas, kuris valdo priklausomybę nuo Spring Boot, užtikrinant, kad visos priklausomybės bus suderinamos -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.0.0</version>
        <relativePath/>
    </parent>


    <properties>
        <java.version>17</java.version>
    </properties>

    <dependencies>
        <!-- Spring Boot Web Starter - Tai priklausomybė, kuri suteikia viską, ko reikia norint kurti RESTful API -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- Spring HATEOAS - Tai priklausomybė, kuri naudojama kuriant hipermedijas API, leidžia lengvai generuoti HATEOAS architektūrą -->
        <dependency>
            <groupId>org.springframework.hateoas</groupId>
            <artifactId>spring-hateoas</artifactId>
            <version>1.4.0</version> <!-- Suderinama versija su Spring Boot 3.0 -->
        </dependency>

        <!-- Spring Data JPA - Tai įrankis, kuris palengvina darbą su duomenų bazėmis naudojant JPA (Java Persistence API) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <!-- MySQL Connector - Priklausomybė, kuri leidžia prisijungti prie MySQL duomenų bazės -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.31</version>
        </dependency>

        <!-- Spring Boot Starter Test - Tai priklausomybė, kuri suteikia viską, ko reikia norint atlikti testavimą su Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Jakarta Validation - Tai biblioteka, naudojama įvesties duomenims patikrinti ir validuoti -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- Backport Util Concurrent - Tai senesnė priklausomybė, kuri buvo naudojama darbui su gijų valdymu (dabar ji dažniausiai nėra būtina su naujesnėmis Java versijomis) -->
        <dependency>
            <groupId>backport-util-concurrent</groupId>
            <artifactId>backport-util-concurrent</artifactId>
            <version>3.1</version>
        </dependency>

        <!-- Springdoc OpenAPI - Tai priklausomybė, kuri integruoja Swagger su Spring Boot, leidžianti lengvai dokumentuoti ir testuoti API -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
            <version>1.6.15</version> <!-- Suderinama su Spring Boot 3.0 -->
        </dependency>

        <!-- Springfox Swagger 2 - Tai kita Swagger biblioteka, leidžianti kurti API dokumentaciją su Spring Boot -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.9.2</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.9.2</version>
        </dependency>

        <!-- JUnit 5 - Tai populiari testavimo biblioteka, naudojama automatiniams testams atlikti -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.7.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.7.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>4.0.0</version>
            <scope>test</scope>
        </dependency>


    </dependencies>

    <build>
        <plugins>
            <!-- Maven Compiler Plugin - Tai įrankis, kuris nurodo, kokią Java versiją naudoti kompiliuojant projektą -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <!-- Nustatome šaltinio ir tikslo versijas -->
                    <source>17</source>
                    <target>17</target>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
